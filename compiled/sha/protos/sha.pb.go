// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The protos here are used for deserializing only. The variable casing is meant to match
// their JSON counterpart. This is a temporary solution until finding providers publish
// their own protocol buffers. This was done because it's easier to define the structure
// using protcol buffers instead of reinventing it ourselves in Go. These protos are not
// complete, many fields are missing.
//
// Generate by running: protoc -I=providers --go_out=compiled providers/sha/protos/*

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: sha/protos/sha.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDisplayName string `protobuf:"bytes,1,opt,name=projectDisplayName,proto3" json:"projectDisplayName,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{0}
}

func (x *Resource) GetProjectDisplayName() string {
	if x != nil {
		return x.ProjectDisplayName
	}
	return ""
}

type StorageScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string                  `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *StorageScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
	Resource               *Resource               `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *StorageScanner) Reset() {
	*x = StorageScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageScanner) ProtoMessage() {}

func (x *StorageScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageScanner.ProtoReflect.Descriptor instead.
func (*StorageScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{1}
}

func (x *StorageScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *StorageScanner) GetFinding() *StorageScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

func (x *StorageScanner) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type FirewallScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string                   `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *FirewallScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *FirewallScanner) Reset() {
	*x = FirewallScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallScanner) ProtoMessage() {}

func (x *FirewallScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallScanner.ProtoReflect.Descriptor instead.
func (*FirewallScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{2}
}

func (x *FirewallScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *FirewallScanner) GetFinding() *FirewallScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type ComputeInstanceScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string                          `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *ComputeInstanceScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *ComputeInstanceScanner) Reset() {
	*x = ComputeInstanceScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeInstanceScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeInstanceScanner) ProtoMessage() {}

func (x *ComputeInstanceScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeInstanceScanner.ProtoReflect.Descriptor instead.
func (*ComputeInstanceScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{3}
}

func (x *ComputeInstanceScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *ComputeInstanceScanner) GetFinding() *ComputeInstanceScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type DatasetScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string                  `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *DatasetScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *DatasetScanner) Reset() {
	*x = DatasetScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetScanner) ProtoMessage() {}

func (x *DatasetScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetScanner.ProtoReflect.Descriptor instead.
func (*DatasetScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{4}
}

func (x *DatasetScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *DatasetScanner) GetFinding() *DatasetScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type IamScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string              `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *IamScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *IamScanner) Reset() {
	*x = IamScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamScanner) ProtoMessage() {}

func (x *IamScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamScanner.ProtoReflect.Descriptor instead.
func (*IamScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{5}
}

func (x *IamScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *IamScanner) GetFinding() *IamScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type SqlScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string              `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *SqlScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *SqlScanner) Reset() {
	*x = SqlScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlScanner) ProtoMessage() {}

func (x *SqlScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlScanner.ProtoReflect.Descriptor instead.
func (*SqlScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{6}
}

func (x *SqlScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *SqlScanner) GetFinding() *SqlScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type ContainerScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string                    `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *ContainerScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *ContainerScanner) Reset() {
	*x = ContainerScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerScanner) ProtoMessage() {}

func (x *ContainerScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerScanner.ProtoReflect.Descriptor instead.
func (*ContainerScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *ContainerScanner) GetFinding() *ContainerScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type LoggingScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationConfigName string                  `protobuf:"bytes,1,opt,name=notificationConfigName,proto3" json:"notificationConfigName,omitempty"`
	Finding                *LoggingScanner_Finding `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *LoggingScanner) Reset() {
	*x = LoggingScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingScanner) ProtoMessage() {}

func (x *LoggingScanner) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingScanner.ProtoReflect.Descriptor instead.
func (*LoggingScanner) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{8}
}

func (x *LoggingScanner) GetNotificationConfigName() string {
	if x != nil {
		return x.NotificationConfigName
	}
	return ""
}

func (x *LoggingScanner) GetFinding() *LoggingScanner_Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type StorageScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StorageScanner_SecurityMarks) Reset() {
	*x = StorageScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageScanner_SecurityMarks) ProtoMessage() {}

func (x *StorageScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*StorageScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StorageScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type StorageScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerName string `protobuf:"bytes,2,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *StorageScanner_SourceProperties) Reset() {
	*x = StorageScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageScanner_SourceProperties) ProtoMessage() {}

func (x *StorageScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*StorageScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{1, 1}
}

func (x *StorageScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type StorageScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *StorageScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	ResourceName     string                           `protobuf:"bytes,2,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	Category         string                           `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	State            string                           `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *StorageScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                           `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StorageScanner_Finding) Reset() {
	*x = StorageScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageScanner_Finding) ProtoMessage() {}

func (x *StorageScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageScanner_Finding.ProtoReflect.Descriptor instead.
func (*StorageScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{1, 2}
}

func (x *StorageScanner_Finding) GetSourceProperties() *StorageScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *StorageScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *StorageScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *StorageScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StorageScanner_Finding) GetSecurityMarks() *StorageScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *StorageScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *StorageScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FirewallScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FirewallScanner_SecurityMarks) Reset() {
	*x = FirewallScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallScanner_SecurityMarks) ProtoMessage() {}

func (x *FirewallScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*FirewallScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{2, 0}
}

func (x *FirewallScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type FirewallScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Allowed           string `protobuf:"bytes,2,opt,name=allowed,proto3" json:"allowed,omitempty"`
	AllowedIpRange    string `protobuf:"bytes,3,opt,name=allowedIpRange,proto3" json:"allowedIpRange,omitempty"`
	ActivationTrigger string `protobuf:"bytes,4,opt,name=activationTrigger,proto3" json:"activationTrigger,omitempty"`
	SourceRange       string `protobuf:"bytes,5,opt,name=sourceRange,proto3" json:"sourceRange,omitempty"`
	ScannerName       string `protobuf:"bytes,6,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *FirewallScanner_SourceProperties) Reset() {
	*x = FirewallScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallScanner_SourceProperties) ProtoMessage() {}

func (x *FirewallScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*FirewallScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{2, 1}
}

func (x *FirewallScanner_SourceProperties) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *FirewallScanner_SourceProperties) GetAllowed() string {
	if x != nil {
		return x.Allowed
	}
	return ""
}

func (x *FirewallScanner_SourceProperties) GetAllowedIpRange() string {
	if x != nil {
		return x.AllowedIpRange
	}
	return ""
}

func (x *FirewallScanner_SourceProperties) GetActivationTrigger() string {
	if x != nil {
		return x.ActivationTrigger
	}
	return ""
}

func (x *FirewallScanner_SourceProperties) GetSourceRange() string {
	if x != nil {
		return x.SourceRange
	}
	return ""
}

func (x *FirewallScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type FirewallScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *FirewallScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ResourceName     string                            `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	State            string                            `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *FirewallScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                            `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FirewallScanner_Finding) Reset() {
	*x = FirewallScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallScanner_Finding) ProtoMessage() {}

func (x *FirewallScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallScanner_Finding.ProtoReflect.Descriptor instead.
func (*FirewallScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{2, 2}
}

func (x *FirewallScanner_Finding) GetSourceProperties() *FirewallScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *FirewallScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *FirewallScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *FirewallScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FirewallScanner_Finding) GetSecurityMarks() *FirewallScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *FirewallScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *FirewallScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ComputeInstanceScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ComputeInstanceScanner_SecurityMarks) Reset() {
	*x = ComputeInstanceScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeInstanceScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeInstanceScanner_SecurityMarks) ProtoMessage() {}

func (x *ComputeInstanceScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeInstanceScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*ComputeInstanceScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ComputeInstanceScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type ComputeInstanceScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ScannerName string `protobuf:"bytes,2,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *ComputeInstanceScanner_SourceProperties) Reset() {
	*x = ComputeInstanceScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeInstanceScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeInstanceScanner_SourceProperties) ProtoMessage() {}

func (x *ComputeInstanceScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeInstanceScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*ComputeInstanceScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ComputeInstanceScanner_SourceProperties) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *ComputeInstanceScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type ComputeInstanceScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *ComputeInstanceScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                                   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ResourceName     string                                   `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	State            string                                   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *ComputeInstanceScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                                   `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                                   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ComputeInstanceScanner_Finding) Reset() {
	*x = ComputeInstanceScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeInstanceScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeInstanceScanner_Finding) ProtoMessage() {}

func (x *ComputeInstanceScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeInstanceScanner_Finding.ProtoReflect.Descriptor instead.
func (*ComputeInstanceScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ComputeInstanceScanner_Finding) GetSourceProperties() *ComputeInstanceScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *ComputeInstanceScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ComputeInstanceScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ComputeInstanceScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ComputeInstanceScanner_Finding) GetSecurityMarks() *ComputeInstanceScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *ComputeInstanceScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *ComputeInstanceScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DatasetScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DatasetScanner_SecurityMarks) Reset() {
	*x = DatasetScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetScanner_SecurityMarks) ProtoMessage() {}

func (x *DatasetScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*DatasetScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DatasetScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type DatasetScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ScannerName string `protobuf:"bytes,2,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *DatasetScanner_SourceProperties) Reset() {
	*x = DatasetScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetScanner_SourceProperties) ProtoMessage() {}

func (x *DatasetScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*DatasetScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{4, 1}
}

func (x *DatasetScanner_SourceProperties) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *DatasetScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type DatasetScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *DatasetScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                           `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ResourceName     string                           `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	State            string                           `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *DatasetScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                           `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DatasetScanner_Finding) Reset() {
	*x = DatasetScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetScanner_Finding) ProtoMessage() {}

func (x *DatasetScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetScanner_Finding.ProtoReflect.Descriptor instead.
func (*DatasetScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{4, 2}
}

func (x *DatasetScanner_Finding) GetSourceProperties() *DatasetScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *DatasetScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DatasetScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *DatasetScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *DatasetScanner_Finding) GetSecurityMarks() *DatasetScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *DatasetScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *DatasetScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IamScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IamScanner_SecurityMarks) Reset() {
	*x = IamScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamScanner_SecurityMarks) ProtoMessage() {}

func (x *IamScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*IamScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{5, 0}
}

func (x *IamScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type IamScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID         string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	OffendingIamRoles string `protobuf:"bytes,2,opt,name=offendingIamRoles,proto3" json:"offendingIamRoles,omitempty"`
	ScannerName       string `protobuf:"bytes,3,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *IamScanner_SourceProperties) Reset() {
	*x = IamScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamScanner_SourceProperties) ProtoMessage() {}

func (x *IamScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*IamScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{5, 1}
}

func (x *IamScanner_SourceProperties) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *IamScanner_SourceProperties) GetOffendingIamRoles() string {
	if x != nil {
		return x.OffendingIamRoles
	}
	return ""
}

func (x *IamScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type IamScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *IamScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                       `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Parent           string                       `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	State            string                       `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	ResourceName     string                       `protobuf:"bytes,5,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	SecurityMarks    *IamScanner_SecurityMarks    `protobuf:"bytes,6,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                       `protobuf:"bytes,7,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                       `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IamScanner_Finding) Reset() {
	*x = IamScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamScanner_Finding) ProtoMessage() {}

func (x *IamScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamScanner_Finding.ProtoReflect.Descriptor instead.
func (*IamScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{5, 2}
}

func (x *IamScanner_Finding) GetSourceProperties() *IamScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *IamScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *IamScanner_Finding) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *IamScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *IamScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *IamScanner_Finding) GetSecurityMarks() *IamScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *IamScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *IamScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SqlScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SqlScanner_SecurityMarks) Reset() {
	*x = SqlScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlScanner_SecurityMarks) ProtoMessage() {}

func (x *SqlScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*SqlScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{6, 0}
}

func (x *SqlScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type SqlScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ScannerName string `protobuf:"bytes,2,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *SqlScanner_SourceProperties) Reset() {
	*x = SqlScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlScanner_SourceProperties) ProtoMessage() {}

func (x *SqlScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*SqlScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{6, 1}
}

func (x *SqlScanner_SourceProperties) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *SqlScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type SqlScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *SqlScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                       `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ResourceName     string                       `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	State            string                       `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *SqlScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                       `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                       `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SqlScanner_Finding) Reset() {
	*x = SqlScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlScanner_Finding) ProtoMessage() {}

func (x *SqlScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlScanner_Finding.ProtoReflect.Descriptor instead.
func (*SqlScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{6, 2}
}

func (x *SqlScanner_Finding) GetSourceProperties() *SqlScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *SqlScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SqlScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *SqlScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SqlScanner_Finding) GetSecurityMarks() *SqlScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *SqlScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *SqlScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ContainerScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContainerScanner_SecurityMarks) Reset() {
	*x = ContainerScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerScanner_SecurityMarks) ProtoMessage() {}

func (x *ContainerScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*ContainerScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ContainerScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type ContainerScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ScannerName string `protobuf:"bytes,2,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *ContainerScanner_SourceProperties) Reset() {
	*x = ContainerScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerScanner_SourceProperties) ProtoMessage() {}

func (x *ContainerScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*ContainerScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ContainerScanner_SourceProperties) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *ContainerScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type ContainerScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *ContainerScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                             `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ResourceName     string                             `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	State            string                             `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *ContainerScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                             `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                             `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ContainerScanner_Finding) Reset() {
	*x = ContainerScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerScanner_Finding) ProtoMessage() {}

func (x *ContainerScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerScanner_Finding.ProtoReflect.Descriptor instead.
func (*ContainerScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{7, 2}
}

func (x *ContainerScanner_Finding) GetSourceProperties() *ContainerScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *ContainerScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ContainerScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ContainerScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ContainerScanner_Finding) GetSecurityMarks() *ContainerScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *ContainerScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *ContainerScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LoggingScanner_SecurityMarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]string `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LoggingScanner_SecurityMarks) Reset() {
	*x = LoggingScanner_SecurityMarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingScanner_SecurityMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingScanner_SecurityMarks) ProtoMessage() {}

func (x *LoggingScanner_SecurityMarks) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingScanner_SecurityMarks.ProtoReflect.Descriptor instead.
func (*LoggingScanner_SecurityMarks) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{8, 0}
}

func (x *LoggingScanner_SecurityMarks) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

type LoggingScanner_SourceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ScannerName string `protobuf:"bytes,2,opt,name=ScannerName,proto3" json:"ScannerName,omitempty"`
}

func (x *LoggingScanner_SourceProperties) Reset() {
	*x = LoggingScanner_SourceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingScanner_SourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingScanner_SourceProperties) ProtoMessage() {}

func (x *LoggingScanner_SourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingScanner_SourceProperties.ProtoReflect.Descriptor instead.
func (*LoggingScanner_SourceProperties) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{8, 1}
}

func (x *LoggingScanner_SourceProperties) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *LoggingScanner_SourceProperties) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

type LoggingScanner_Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProperties *LoggingScanner_SourceProperties `protobuf:"bytes,1,opt,name=sourceProperties,proto3" json:"sourceProperties,omitempty"`
	Category         string                           `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ResourceName     string                           `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	State            string                           `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SecurityMarks    *LoggingScanner_SecurityMarks    `protobuf:"bytes,5,opt,name=securityMarks,proto3" json:"securityMarks,omitempty"`
	EventTime        string                           `protobuf:"bytes,6,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	Name             string                           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LoggingScanner_Finding) Reset() {
	*x = LoggingScanner_Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sha_protos_sha_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingScanner_Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingScanner_Finding) ProtoMessage() {}

func (x *LoggingScanner_Finding) ProtoReflect() protoreflect.Message {
	mi := &file_sha_protos_sha_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingScanner_Finding.ProtoReflect.Descriptor instead.
func (*LoggingScanner_Finding) Descriptor() ([]byte, []int) {
	return file_sha_protos_sha_proto_rawDescGZIP(), []int{8, 2}
}

func (x *LoggingScanner_Finding) GetSourceProperties() *LoggingScanner_SourceProperties {
	if x != nil {
		return x.SourceProperties
	}
	return nil
}

func (x *LoggingScanner_Finding) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LoggingScanner_Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *LoggingScanner_Finding) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LoggingScanner_Finding) GetSecurityMarks() *LoggingScanner_SecurityMarks {
	if x != nil {
		return x.SecurityMarks
	}
	return nil
}

func (x *LoggingScanner_Finding) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *LoggingScanner_Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_sha_protos_sha_proto protoreflect.FileDescriptor

var file_sha_protos_sha_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x68, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x68, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x8b, 0x05, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x89, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x34, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa4, 0x02, 0x0a, 0x07, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x4c, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x9a, 0x06, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x07,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x1a, 0x8a, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72,
	0x6b, 0x73, 0x12, 0x3f, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b,
	0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xe4, 0x01,
	0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x70, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa6, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x4d, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x46,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x05,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x91, 0x01, 0x0a, 0x0d,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x46, 0x0a,
	0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61,
	0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x52, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0xb4, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x54, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x05, 0x0a, 0x0e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x89, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61,
	0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa4, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x4c, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xb5, 0x05, 0x0a, 0x0a, 0x49, 0x61, 0x6d, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x49, 0x61, 0x6d, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x85, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x61, 0x6d, 0x53, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b,
	0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x80, 0x01,
	0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x66, 0x66, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x61, 0x6d,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x66, 0x66,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0xb4, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x10,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x61, 0x6d, 0x53, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x61,
	0x6d, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xee, 0x04, 0x0a, 0x0a, 0x53, 0x71, 0x6c, 0x53,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x53, 0x71, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x85, 0x01,
	0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x3a, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x53, 0x71, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d,
	0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x9c, 0x02, 0x0a, 0x07, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x53, 0x71, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53,
	0x71, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x05, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x8b, 0x01, 0x0a, 0x0d, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x05,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x38,
	0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa8, 0x02, 0x0a,
	0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x4e, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x45,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x05, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x89, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x52, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa4, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x4c, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x5a, 0x0a,
	0x73, 0x68, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sha_protos_sha_proto_rawDescOnce sync.Once
	file_sha_protos_sha_proto_rawDescData = file_sha_protos_sha_proto_rawDesc
)

func file_sha_protos_sha_proto_rawDescGZIP() []byte {
	file_sha_protos_sha_proto_rawDescOnce.Do(func() {
		file_sha_protos_sha_proto_rawDescData = protoimpl.X.CompressGZIP(file_sha_protos_sha_proto_rawDescData)
	})
	return file_sha_protos_sha_proto_rawDescData
}

var file_sha_protos_sha_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_sha_protos_sha_proto_goTypes = []interface{}{
	(*Resource)(nil),                                // 0: Resource
	(*StorageScanner)(nil),                          // 1: StorageScanner
	(*FirewallScanner)(nil),                         // 2: FirewallScanner
	(*ComputeInstanceScanner)(nil),                  // 3: ComputeInstanceScanner
	(*DatasetScanner)(nil),                          // 4: DatasetScanner
	(*IamScanner)(nil),                              // 5: IamScanner
	(*SqlScanner)(nil),                              // 6: SqlScanner
	(*ContainerScanner)(nil),                        // 7: ContainerScanner
	(*LoggingScanner)(nil),                          // 8: LoggingScanner
	(*StorageScanner_SecurityMarks)(nil),            // 9: StorageScanner.SecurityMarks
	(*StorageScanner_SourceProperties)(nil),         // 10: StorageScanner.SourceProperties
	(*StorageScanner_Finding)(nil),                  // 11: StorageScanner.Finding
	nil,                                             // 12: StorageScanner.SecurityMarks.MarksEntry
	(*FirewallScanner_SecurityMarks)(nil),           // 13: FirewallScanner.SecurityMarks
	(*FirewallScanner_SourceProperties)(nil),        // 14: FirewallScanner.SourceProperties
	(*FirewallScanner_Finding)(nil),                 // 15: FirewallScanner.Finding
	nil,                                             // 16: FirewallScanner.SecurityMarks.MarksEntry
	(*ComputeInstanceScanner_SecurityMarks)(nil),    // 17: ComputeInstanceScanner.SecurityMarks
	(*ComputeInstanceScanner_SourceProperties)(nil), // 18: ComputeInstanceScanner.SourceProperties
	(*ComputeInstanceScanner_Finding)(nil),          // 19: ComputeInstanceScanner.Finding
	nil,                                             // 20: ComputeInstanceScanner.SecurityMarks.MarksEntry
	(*DatasetScanner_SecurityMarks)(nil),            // 21: DatasetScanner.SecurityMarks
	(*DatasetScanner_SourceProperties)(nil),         // 22: DatasetScanner.SourceProperties
	(*DatasetScanner_Finding)(nil),                  // 23: DatasetScanner.Finding
	nil,                                             // 24: DatasetScanner.SecurityMarks.MarksEntry
	(*IamScanner_SecurityMarks)(nil),                // 25: IamScanner.SecurityMarks
	(*IamScanner_SourceProperties)(nil),             // 26: IamScanner.SourceProperties
	(*IamScanner_Finding)(nil),                      // 27: IamScanner.Finding
	nil,                                             // 28: IamScanner.SecurityMarks.MarksEntry
	(*SqlScanner_SecurityMarks)(nil),                // 29: SqlScanner.SecurityMarks
	(*SqlScanner_SourceProperties)(nil),             // 30: SqlScanner.SourceProperties
	(*SqlScanner_Finding)(nil),                      // 31: SqlScanner.Finding
	nil,                                             // 32: SqlScanner.SecurityMarks.MarksEntry
	(*ContainerScanner_SecurityMarks)(nil),          // 33: ContainerScanner.SecurityMarks
	(*ContainerScanner_SourceProperties)(nil),       // 34: ContainerScanner.SourceProperties
	(*ContainerScanner_Finding)(nil),                // 35: ContainerScanner.Finding
	nil,                                             // 36: ContainerScanner.SecurityMarks.MarksEntry
	(*LoggingScanner_SecurityMarks)(nil),            // 37: LoggingScanner.SecurityMarks
	(*LoggingScanner_SourceProperties)(nil),         // 38: LoggingScanner.SourceProperties
	(*LoggingScanner_Finding)(nil),                  // 39: LoggingScanner.Finding
	nil,                                             // 40: LoggingScanner.SecurityMarks.MarksEntry
}
var file_sha_protos_sha_proto_depIdxs = []int32{
	11, // 0: StorageScanner.finding:type_name -> StorageScanner.Finding
	0,  // 1: StorageScanner.resource:type_name -> Resource
	15, // 2: FirewallScanner.finding:type_name -> FirewallScanner.Finding
	19, // 3: ComputeInstanceScanner.finding:type_name -> ComputeInstanceScanner.Finding
	23, // 4: DatasetScanner.finding:type_name -> DatasetScanner.Finding
	27, // 5: IamScanner.finding:type_name -> IamScanner.Finding
	31, // 6: SqlScanner.finding:type_name -> SqlScanner.Finding
	35, // 7: ContainerScanner.finding:type_name -> ContainerScanner.Finding
	39, // 8: LoggingScanner.finding:type_name -> LoggingScanner.Finding
	12, // 9: StorageScanner.SecurityMarks.marks:type_name -> StorageScanner.SecurityMarks.MarksEntry
	10, // 10: StorageScanner.Finding.sourceProperties:type_name -> StorageScanner.SourceProperties
	9,  // 11: StorageScanner.Finding.securityMarks:type_name -> StorageScanner.SecurityMarks
	16, // 12: FirewallScanner.SecurityMarks.marks:type_name -> FirewallScanner.SecurityMarks.MarksEntry
	14, // 13: FirewallScanner.Finding.sourceProperties:type_name -> FirewallScanner.SourceProperties
	13, // 14: FirewallScanner.Finding.securityMarks:type_name -> FirewallScanner.SecurityMarks
	20, // 15: ComputeInstanceScanner.SecurityMarks.marks:type_name -> ComputeInstanceScanner.SecurityMarks.MarksEntry
	18, // 16: ComputeInstanceScanner.Finding.sourceProperties:type_name -> ComputeInstanceScanner.SourceProperties
	17, // 17: ComputeInstanceScanner.Finding.securityMarks:type_name -> ComputeInstanceScanner.SecurityMarks
	24, // 18: DatasetScanner.SecurityMarks.marks:type_name -> DatasetScanner.SecurityMarks.MarksEntry
	22, // 19: DatasetScanner.Finding.sourceProperties:type_name -> DatasetScanner.SourceProperties
	21, // 20: DatasetScanner.Finding.securityMarks:type_name -> DatasetScanner.SecurityMarks
	28, // 21: IamScanner.SecurityMarks.marks:type_name -> IamScanner.SecurityMarks.MarksEntry
	26, // 22: IamScanner.Finding.sourceProperties:type_name -> IamScanner.SourceProperties
	25, // 23: IamScanner.Finding.securityMarks:type_name -> IamScanner.SecurityMarks
	32, // 24: SqlScanner.SecurityMarks.marks:type_name -> SqlScanner.SecurityMarks.MarksEntry
	30, // 25: SqlScanner.Finding.sourceProperties:type_name -> SqlScanner.SourceProperties
	29, // 26: SqlScanner.Finding.securityMarks:type_name -> SqlScanner.SecurityMarks
	36, // 27: ContainerScanner.SecurityMarks.marks:type_name -> ContainerScanner.SecurityMarks.MarksEntry
	34, // 28: ContainerScanner.Finding.sourceProperties:type_name -> ContainerScanner.SourceProperties
	33, // 29: ContainerScanner.Finding.securityMarks:type_name -> ContainerScanner.SecurityMarks
	40, // 30: LoggingScanner.SecurityMarks.marks:type_name -> LoggingScanner.SecurityMarks.MarksEntry
	38, // 31: LoggingScanner.Finding.sourceProperties:type_name -> LoggingScanner.SourceProperties
	37, // 32: LoggingScanner.Finding.securityMarks:type_name -> LoggingScanner.SecurityMarks
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_sha_protos_sha_proto_init() }
func file_sha_protos_sha_proto_init() {
	if File_sha_protos_sha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sha_protos_sha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeInstanceScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeInstanceScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeInstanceScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeInstanceScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingScanner_SecurityMarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingScanner_SourceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sha_protos_sha_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingScanner_Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sha_protos_sha_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sha_protos_sha_proto_goTypes,
		DependencyIndexes: file_sha_protos_sha_proto_depIdxs,
		MessageInfos:      file_sha_protos_sha_proto_msgTypes,
	}.Build()
	File_sha_protos_sha_proto = out.File
	file_sha_protos_sha_proto_rawDesc = nil
	file_sha_protos_sha_proto_goTypes = nil
	file_sha_protos_sha_proto_depIdxs = nil
}
