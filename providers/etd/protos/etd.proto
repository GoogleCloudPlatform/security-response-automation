// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The protos here are used for deserializing only. The variable casing is meant to match
// their JSON counterpart. This is a temporary solution until finding providers publish
// their own protocol buffers. This was done because it's easier to define the structure
// using protcol buffers instead of reinventing it ourselves in Go. These protos are not
// complete, many fields are missing.
//
// Generate by running: protoc -I=providers --go_out=compiled providers/etd/protos/*

syntax = "proto3";


// TODO: Finish.
message BadDomain {
    string ip_address = 1;
}

message AnomalousIAMGrant {

    message SensitiveRoleGrant {
        repeated string members = 1;
    }

    message Properties {
        SensitiveRoleGrant sensitiveRoleGrant = 1;
    }

    message SourceLogId {
        string projectId = 1;
    }

    message Evidence {
        SourceLogId sourceLogId = 1;
    }

    message DetectionCategory {
        string ruleName = 1;
        string subRuleName = 2;
    }

    message JSONPayload {
        Properties properties = 1;
        DetectionCategory detectionCategory = 2;
        repeated Evidence evidence = 3;
    }

    string insertId = 1;
    string logName = 2;
    JSONPayload jsonPayload = 3;
}

message BadIP {

    message Network {
        string project = 1;
    }

    message Properties {
        Network network = 1;
        string instanceDetails = 2;
    }

    message AffectedResource {
        string gcpResourceName = 1;
    }

    message DetectionCategory {
        string ruleName = 1;
    }

    message JSONPayload {
        repeated AffectedResource affectedResources = 1;
        Properties properties = 2;
        DetectionCategory detectionCategory = 3;
    }

    string insertId = 1;
    string logName = 2;
    JSONPayload jsonPayload = 3;

}

message SshBruteForce {

    message LoginAttempt {
        string authResult = 1;
        string sourceIp = 2;
        string userName = 3;
        string vmName = 4;
    }

    message Properties {
        string instance_id = 1;
        string project_id = 2;
        string zone = 3;
        repeated LoginAttempt LoginAttempts = 4;
    }

    message AffectedResource {
        string gcpResourceName = 1;
    }

    message DetectionCategory {
        string ruleName = 1;
    }

    message JSONPayload {
        repeated AffectedResource affectedResources = 1;
        Properties properties = 2;
        DetectionCategory detectionCategory = 3;
    }

    string insertId = 1;
    string logName = 2;
    JSONPayload jsonPayload = 3;
}

message BadIPSCC {

        message SecurityMarks {
            map<string, string> marks = 1;
        }

        message Network {
            string project = 1;
        }

        message Properties {
            Network network = 1;
            string instanceDetails = 2;
        }

        message DetectionCategory {
            string ruleName = 1;
        }

        message SourceProperties {
            Properties properties = 1;
            DetectionCategory detectionCategory = 2;
        }

        message Finding {
            SourceProperties sourceProperties = 1;
            string category = 2;
            string resourceName = 3;
            string state = 4;
            SecurityMarks securityMarks = 5;
            string eventTime = 6;
            string name = 7;
        }

        string notificationConfigName = 1;
        Finding finding = 2;
}

message AnomalousIAMGrantSCC {

    message SecurityMarks {
        map<string, string> marks = 1;
    }

    message SourceLogId {
        string projectId = 1;
    }
    message Evidence {
        SourceLogId sourceLogId = 1;
    }

    message SensitiveRoleGrant {
        repeated string members = 1;
    }

    message Properties {
        SensitiveRoleGrant sensitiveRoleGrant = 1;
    }

    message DetectionCategory {
        string ruleName = 1;
    }

    message SourceProperties {
        Properties properties = 1;
        DetectionCategory detectionCategory = 2;
        repeated Evidence evidence = 3;
    }

    message Finding {
        SourceProperties sourceProperties = 1;
        string category = 2;
        string resourceName = 3;
        string state = 4;
        SecurityMarks securityMarks = 5;
        string eventTime = 6;
        string name = 7;
    }

    string notificationConfigName = 1;
    Finding finding = 2;
}

message SshBruteForceSCC {

    message SecurityMarks {
        map<string, string> marks = 1;
    }

    message LoginAttempt {
        string authResult = 1;
        string sourceIp = 2;
        string userName = 3;
        string vmName = 4;
    }

    message Properties {
        string instance_id = 1;
        string project_id = 2;
        string zone = 3;
        repeated LoginAttempt LoginAttempts = 4;
    }

    message AffectedResource {
        string gcpResourceName = 1;
    }

    message DetectionCategory {
        string ruleName = 1;
    }

    message SourceProperties {
        repeated AffectedResource affectedResources = 1;
        Properties properties = 2;
        DetectionCategory detectionCategory = 3;
    }
    message Finding {
        SourceProperties sourceProperties = 1;
        string category = 2;
        string resourceName = 3;
        string state = 4;
        SecurityMarks securityMarks = 5;
        string eventTime = 6;
        string name = 7;
    }

    string notificationConfigName = 1;
    Finding finding = 2;
}
